import asm65816
import jsl_rts
import Bowspr
import IsoBattleSystem_Flags
import menu_macros

// Located in 0xC2F121, where enemy placements in battle occur
// Changes the y-axis of enemy placements for 1st row enemies
ROM[0xC2F53D] = {
	LDA_8 (0x70)
}

// Changes the y-axis of enemy placements for 2nd row enemies
ROM[0xC2F534] = {
	LDA_8 (0x60)
}

// Adjusts the space inbetween each enemy and the x-pos slightly
ROM[0xC2F516] = {
	JSL (Adjust_Enemy_Spacing)
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
}

Adjust_Enemy_Spacing: {
	LDA_x (0x0000)
	AND_i (0x00FF)
	CLC
	ADC_i (0x00F8)
	//ADC_d (0x00)
	STA_d (0x06)
	ASL
	ADC_d (0x06)
	ASL
	//ASL
	AND_i (0x00FF)
	REP (0x20)
	RTL
}

// Opens up the HP/PP Windows in battle
/*
ROM[0xC24D6B] = {
	NOP
	NOP
	NOP
	NOP
}

ROM[0xC25EF3] = {
	NOP
	NOP
	NOP
	NOP
}
*/


define CURRENT_BATTLE_GROUP_ADDR = 0x4A8C
define CreateTBoxLong = 0xC1DD47
ROM[0xC24EF2] = {
	JSL (Init_Battle_Flags)
}

ROM[0xC25FC6] = {
	JSL (Victory)
	NOP
	NOP
}

Reset_Flags: {
	set_flag(NESS_DEF_FLAG, 0)
	set_flag(NESS_PSI_FLAG, 0)
	set_flag(PAULA_DEF_FLAG, 0)
	set_flag(PAULA_PSI_FLAG, 0)
	set_flag(JEFF_DEF_FLAG, 0)
	set_flag(JEFF_SPY_FLAG, 0)
	set_flag(POO_DEF_FLAG, 0)
	set_flag(POO_PSI_FLAG, 0)
	
	set_flag(PARTY_RUNAWAY_FLAG, 0)
	RTL
}

Init_Battle_Flags:{
	JSL (CreateTBoxLong)
	JSL (Reset_Flags)
	
	ASMLoadAddress0E(NPC.Create_Party_Spr)
	JSL (0xC1DC1C)	// Display Text
	
	
	LDA_d (0x1D)	//	Data for Battle initiative 
	//TODO: Do things for battle initiaitve stuff
	RTL
}

Victory: {
	// Our Code
	// Reset Battle flags
	
	JSL (Reset_Flags)
	set_flag(VICTORY_FLAG, 1)
	
	// Vanilla Code
	LDA_a (CURRENT_BATTLE_GROUP_ADDR)
	CMP_i (0x01C0)
	RTL
}

// At the end of the Battle Routine, thanks Vittorio
ROM[0xC2617D] = JSL(Clean_Up)

Clean_Up: {
    JSL(0xC1DD5F) // original JSL.

	set_flag(VICTORY_FLAG, 0)	
    JML(ASM_BowsprEnd) // JML instead of JSL for tail-call optimization.
}